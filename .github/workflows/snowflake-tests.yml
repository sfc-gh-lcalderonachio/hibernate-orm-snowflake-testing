name: Run Gradle Tests

# Trigger the workflow on demand (manual trigger)
on:
  workflow_dispatch:  # This will allow you to manually trigger the workflow

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      JDK_JAVA_OPTIONS: --add-reads=org.apache.arrow.flight.core=ALL-UNNAMED --add-opens=java.base/java.nio=org.apache.arrow.memory.core,ALL-UNNAMED
      SNOWFLAKE_TEST_ACCOUNT: ${{secrets.SNOWFLAKE_TEST_ACCOUNT_AWS}}
      SNOWFLAKE_TEST_DATABASE: ${{secrets.SNOWFLAKE_TEST_DATABASE}}
      SNOWFLAKE_TEST_PASSWORD: ${{secrets.SNOWFLAKE_TEST_PASSWORD_AWS}}
      SNOWFLAKE_TEST_SCHEMA: ${{secrets.SNOWFLAKE_TEST_SCHEMA}}
      SNOWFLAKE_TEST_USER: ${{secrets.SNOWFLAKE_TEST_USER}}
      SNOWFLAKE_TEST_WAREHOUSE: ${{secrets.SNOWFLAKE_TEST_WAREHOUSE}}

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4
      # Set up JDK (example: OpenJDK 11, can be changed based on your project requirements)
      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
      - name: Build with Gradle
        run: ./gradlew build -x test






      # Run Gradle tests
      - name: Run Gradle Snowflake tests
        run: ./gradlew :hibernate-core:matrix_snowflake -i

      # Optionally: Upload test results to GitHub Actions
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: build/test-results/test